paths:
  /products:
    get:
      summary: Retrieve all products
      description: Returns a list of all products with pagination information.
      tags:
        - Products
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: The page number for pagination.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: The maximum number of products per page.
        - in: query
          name: sort
          schema:
            type: string
            enum: ["asc", "desc"]
          description: Sort order for products (ascending or descending by price).
        - in: query
          name: query
          schema:
            type: string
          description: Filter products by category.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: The status code of the response.
                  message:
                    type: string
                    description: A message describing the result of the operation.
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        description: Indicates the status of the response.
                      payload:
                        type: array
                        items:
                          $ref: "#/components/schemas/Product"
                        description: List of products.
                      totalPages:
                        type: integer
                        description: Total number of pages for pagination.
                      prevPage:
                        type: integer
                        description: The page number of the previous page.
                      nextPage:
                        type: integer
                        description: The page number of the next page.
                      page:
                        type: integer
                        description: The current page number.
                      hasPrevPage:
                        type: boolean
                        description: Indicates if there is a previous page.
                      hasNextPage:
                        type: boolean
                        description: Indicates if there is a next page.
                      prevLink:
                        type: string
                        nullable: true
                        description: Link to the previous page.
                      nextLink:
                        type: string
                        nullable: true
                        description: Link to the next page.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new product
      description: Endpoint for creating a new product. Only available to admins or premium users.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - code
                - price
                - stock
                - category
              properties:
                title:
                  type: string
                  description: The title of the product.
                description:
                  type: string
                  description: The description of the product.
                code:
                  type: string
                  description: The code of the product.
                price:
                  type: number
                  description: The price of the product.
                stock:
                  type: number
                  description: The stock quantity of the product.
                category:
                  type: string
                  description: The category of the product.
                thumbnails:
                  type: array
                  items:
                    type: string
                  description: URLs of thumbnails associated with the product.
      responses:
        201:
          description: Product successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/{id}:
    get:
      summary: Retrieve a product by ID
      description: Retrieves information about a specific product by its ID.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The unique identifier of the product.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update a product by ID
      description: Update an existing product with the specified ID. Only the owner of the product can update it.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the product to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: boolean
                  description: The updated status of the product.
                title:
                  type: string
                  description: The updated title of the product.
                description:
                  type: string
                  description: The updated description of the product.
                code:
                  type: string
                  description: The updated code of the product.
                price:
                  type: number
                  description: The updated price of the product.
                stock:
                  type: number
                  description: The updated stock quantity of the product.
                category:
                  type: string
                  description: The updated category of the product.
                thumbnails:
                  type: array
                  items:
                    type: string
                  description: Updated URLs of thumbnails associated with the product.
                owner:
                  type: string
                  description: The updated owner of the product.
      responses:
        200:
          description: Item updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete a product by ID
      description: Deletes a product with the specified ID. An admin can delete any product while a premium user can only delete a product they own.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to delete.
      responses:
        200:
          description: Item deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductResponse"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/dto/{id}:
    get:
      summary: Get product details (DTO) by ID
      description: Retrieves product details using Data Transfer Object (DTO) by the specified ID.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to retrieve details for.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: The status code of the response.
                  message:
                    type: string
                    description: A message describing the result of the operation.
                  data:
                    type: object
                    properties:
                      nameProd:
                        type: string
                        description: The name of the product.
                      descriptionProd:
                        type: string
                        description: The description of the product.
                      priceProd:
                        type: number
                        description: The price of the product.
                      stockProd:
                        type: number
                        description: The stock quantity of the product.
        404:
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /products/mockingproducts:
    post:
      summary: Generate mock products
      description: Generates a specified number of mock product. These are not stored in the database.
      tags:
        - Products
      parameters:
        - in: query
          name: cant
          schema:
            type: integer
          required: false
          description: The number of mock products to generate. Default is 100.
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    description: The status code of the response.
                  message:
                    type: string
                    description: A message describing the result of the operation.
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          type: object
                          properties:
                            status:
                              type: boolean
                              description: The status of the product.
                            title:
                              type: string
                              description: The title of the product.
                            description:
                              type: string
                              description: The description of the product.
                            code:
                              type: string
                              description: The unique code of the product.
                            price:
                              type: number
                              format: float
                              description: The price of the product.
                            stock:
                              type: integer
                              description: The stock quantity of the product.
                            category:
                              type: string
                              description: The category of the product.
                            thumbnails:
                              type: array
                              items:
                                type: string
                              description: URLs of thumbnails associated with the product.
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
